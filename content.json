{"pages":[{"title":"404 Not Found：该页无法显示","text":"404","link":"/404.html"},{"title":"about","text":"前端进阶","link":"/about/index.html"},{"title":"文章分类","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/04/23/hello-world/"},{"title":"markdown语法","text":"Markdown 基本语法Markdown 进阶语法vscode富文本语法 1.Markdown是什么？Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。目标：成为一种适用于网络的书写语言 2.怎么来的？它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。 3.为什么要使用它 它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。 兼容HTML，可以转换为HTML格式发布。 跨平台使用。 越来越多的网站支持Markdown。 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail） 摆脱Word 4.语法 语法符号后面一般加空格。segmentfault可以不加空格 （1）标题两种形式： 1）使用=和-标记一级和二级标签 2）使用#,可表示1-6级标题 （2）字体**这是加粗的文字** *这是倾斜的文字* ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果： 这是加粗的文字 这是倾斜的文字 这是斜体加粗的文字 这是加删除线的文字 （3）段落 段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）. （4）引用 在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用。 （5）代码区块在每行加上4个空格或者一个制表符 单行代码前后加 ` 即代码之间用一个反引号括起来hello world多行代码用三个` 12代码块生存手册 （6）列表 无序列表：使用*或+或-标记 有序列表：使用数字加.,如1.的方式 列表嵌套：上一级和下一级之间敲三个空格即可 （7）表格 表头 表头 表头 内容 内容 内容 内容 内容 内容 第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左- 两边加:表示文字居中- 右边加:表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 示例： 姓名 性别 年龄 张三 男 30 （8）图片 ![](url) 示例： （9）超链接[超链接名](url) 示例： 百度 注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。 &lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;","link":"/2019/08/09/markdown语法/"},{"title":"重学JavaScript 1.md","text":"1.基本概念 语法 数据类型 流程控制语句 函数 1.1 语法1.1.1 区分大小写ECMAScript中的一切都要区分大小写（变量、函数名、操作符）；例如：test和Test分别表示两个不同的变量，而函数名不能使用typeof，因为它是关键字，但是typeOf就可以是个有效的函数名。 1.1.2 标识符标识符：即变量、属性、函数的名字，或者函数的参数。规则：由数字、下划线、字母、$组成，不能由数字开头。一般惯例按照驼峰命名法；不能将关键字、保留字以及true、false和null作为标识符。 1.1.3 js注释是用了C风格的注释，包括单行注释和块级注释： 单行注释 // 单行注释 多行注释 /* * 这是一个多行 * （块级）注释。注：第二三行的星号不是必须的，只是为了提高代码可读性。 */ 1.1.4 严格模式(strict mode)严格模式(ECMAScript 5中引入)：为js定义了一种不同的解析与执行模型，在严格模式下ES 3中的一些不确定的行为将得到处理，对某些不安全的操作也会抛出错误。严格模式下，js执行结果会有很大不同。 要在整个脚本中启用严格模式，需要在顶部添加如下代码： &quot;use strict&quot; 该代码是一个编译指令，切换js引擎到严格模式。 如果函数内部的上方包含这条编译指令，可以指定函数在严格模式下执行：1234function doSometing (){ &quot;use strict&quot; // 函数体} 1.1.5 语句ECMAScript语句以一个分号结尾。增加代码可读性以及性能，降低代码出错率。 2.变量js作为弱类型语言，它的变量是松散的，即可以保存任何类型的数据。说白了就是每个变量仅仅作为保存值的占位符而已。 定义变量时要用var(关键字)操作符，后跟变量名(标识符)，例如： var message ; 此代码定义了一个名message的变量，可以用来保存任何值(未初始化时，它会保存一个特殊的值–undefined)。也可以在定义变量时直接初始化。初始化的过程就是给变量赋一个值。 注：var操作符定义的变量，将成为定义该变量的作用域中的局部变量。 即，如果在函数中使用var定义一个变量，那么变量在函数退出后就会被销毁。12345function test (){ var message = 0; //局部变量}test();alert(message); //报错！！！ 访问不到 可以省略var操作符来创建一个全局变量，但不推荐，因为在局部作用域中定义全局变量将会很难维护 使用一条语句定义多个变量，将每个变量使用逗号隔开。初始化化或未初始化均可。123var message = &quot;hi&quot;, found = false, // 缩进提高代码可读性. age = 22; 3.数据类型 基本数据类型(5种)：Number, String, Boolean, Null, Undefined 引用数据类型：Object ECMAScript不支持任何形式创建自定义类型，所有的值最终都是以上6种数据类型之一。","link":"/2019/04/23/重学JS（一）/"}],"tags":[{"name":"ECMAScript","slug":"ECMAScript","link":"/tags/ECMAScript/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","link":"/categories/学习笔记/"}]}